version: "3.7"
volumes:
  synpse-psql-user-data:
  synpse-caddy-user-data:
  synpse-caddy-user-cfg:

services:
  synpse:
    image: quay.io/synpse/controller
    container_name: synpse-controller
    network_mode: bridge
    logging:
      options:
        max-size: 10m
    restart: always
    links:
      - postgres:postgres
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - ${PWD}/assets/secrets/id_rsa:/run/secrets/ssh-server/id_rsa
    environment:
      - CONTROLLER_URI=:8080 # by default we use port 8080 and do TLS termination using caddy service bellow
      - CONTROLLER_DATABASE_TYPE=${CONTROLLER_DATABASE_TYPE}
      - CONTROLLER_DATABASE_HOST=${CONTROLLER_DATABASE_HOST}
      - CONTROLLER_DATABASE_PASSWORD=${CONTROLLER_DATABASE_PASSWORD}
      - CONTROLLER_DATABASE_USERNAME=${CONTROLLER_DATABASE_USERNAME}
      #
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      #
      - CONTROLLER_CLICKHOUSE_ENABLE=False
      #
      - CONTROLLER_SSH_SERVER_KEY=${CONTROLLER_SSH_SERVER_KEY}
      - CONTROLLER_LICENSE=${CONTROLLER_LICENSE}
  postgres:
    image: postgres:13
    network_mode: bridge
    container_name: synpse-postgres
    restart: always
    volumes:
      - "synpse-psql-user-data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${CONTROLLER_DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${CONTROLLER_DATABASE_PASSWORD}
      - POSTGRES_DB=${CONTROLLER_DATABASE_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
  caddy:
    image: caddy:latest
    network_mode: bridge
    container_name: synpse-caddy
    restart: always
    links:
      - synpse:synpse
    depends_on:
      - synpse
    command:
        - caddy
        - reverse-proxy
        - --from
        - ${CONTROLLER_DOMAIN}:${CONTROLLER_PORT}
        - --to
        - synpse:8080
    ports:
      - ${CONTROLLER_PORT}:${CONTROLLER_PORT} 
    volumes:
      - "synpse-caddy-user-data:/data"
      - "synpse-caddy-user-cfg:/config"

networks:
  postgres:
    driver: bridge
